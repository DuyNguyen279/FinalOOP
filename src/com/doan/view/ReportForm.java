/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.doan.view;

import com.doan.controller.Ctr_BaoCao;
import com.doan.dao.BaoCaoDAO;
import com.doan.dao.SanPhamDAO;
import com.doan.model.BaoCao;
import com.doan.model.SanPham;
import com.sun.jdi.IntegerType;
import java.awt.Color;
import java.awt.Font;
import java.text.NumberFormat;
import java.time.LocalDate;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JComboBox;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.NumberFormatter;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Asus
 */
public class ReportForm extends javax.swing.JInternalFrame {

    /**
     * Creates new form ReportForm
     */
    DefaultTableModel model;
    DefaultTableModel model2;
    DefaultTableModel model3;

    public ReportForm() {
        initComponents();

        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        if (ui.getNorthPane() != null) {
            ui.setNorthPane(null);        // Ẩn thanh tiêu đề
        }

        model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        model2 = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        model3 = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        ReportTable.setModel(model);
        listDamagedProduct.setModel(model2);
        listHotProduct.setModel(model3);
        String[] columns = {"Mã Sản Phẩm", "Tên Sản Phẩm", "Số Lượng Đã Bán", "Tổng Tiền"};
        String[] columns2 = {"Mã Sản Phẩm", "Tên Sản Phẩm", "Số Lượng Hư Hỏng", "Giá Niêm Yết", "Thiệt Hại"};
        String[] columns3 = {"Mã Sản Phẩm", "Tên Sản Phẩm", "Số Lượng Bán"};
        model.setColumnIdentifiers(columns);
        model2.setColumnIdentifiers(columns2);
        model3.setColumnIdentifiers(columns3);

        List<SanPham> list = new Ctr_BaoCao().getSanPhamDaBan();
        soldItem(list);
        List<SanPham> list2 = new Ctr_BaoCao().getReportInMonth().getSanPhamHuHong();
        damageItem(list2);
        updateHotProduct();
        List<SanPham> list3 = new Ctr_BaoCao().getReportInMonth().getSanPhamXuHuong();
        hotItem(list3);

        double x = 0;
        for (int i = 0; i < model.getRowCount(); i++) {
            x += Double.valueOf(String.valueOf(model.getValueAt(i, 3)));
        }
        DoanhThu.setText(String.valueOf(x - Double.parseDouble(TongThietHai.getText())));

        MonthCombo.setSelectedIndex(LocalDate.now().getMonthValue() - 1);
        YearSpinner.setValue(LocalDate.now().getYear());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DSsanphamhong = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listDamagedProduct = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        TongThietHai = new javax.swing.JTextField();
        DSsanphambanchay = new javax.swing.JDialog();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listHotProduct = new javax.swing.JTable();
        chartReport = new javax.swing.JDialog();
        MainContentChart = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        scrollPane = new javax.swing.JScrollPane();
        ReportTable = new javax.swing.JTable();
        jToolBar1 = new javax.swing.JToolBar();
        SPHuHongBtn = new javax.swing.JButton();
        SPBanChayBtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        chartBtn = new javax.swing.JButton();
        jToolBar2 = new javax.swing.JToolBar();
        MonthCombo = new javax.swing.JComboBox<>();
        YearSpinner = new javax.swing.JSpinner();
        sreachReportBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        DoanhThu = new javax.swing.JLabel();

        DSsanphamhong.setResizable(false);
        DSsanphamhong.setSize(new java.awt.Dimension(600, 600));

        jPanel3.setBackground(new java.awt.Color(36, 16, 78));
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(36, 16, 78));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Danh Sách Sản Phẩm Hư Hỏng");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        listDamagedProduct.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        listDamagedProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        listDamagedProduct.setRowHeight(30);
        jScrollPane1.setViewportView(listDamagedProduct);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Tổng Thiệt Hại");

        TongThietHai.setEditable(false);
        TongThietHai.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(44, 44, 44)
                .addComponent(TongThietHai, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TongThietHai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout DSsanphamhongLayout = new javax.swing.GroupLayout(DSsanphamhong.getContentPane());
        DSsanphamhong.getContentPane().setLayout(DSsanphamhongLayout);
        DSsanphamhongLayout.setHorizontalGroup(
            DSsanphamhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        DSsanphamhongLayout.setVerticalGroup(
            DSsanphamhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        DSsanphambanchay.setResizable(false);
        DSsanphambanchay.setSize(new java.awt.Dimension(600, 600));

        jPanel6.setBackground(new java.awt.Color(36, 16, 78));
        jPanel6.setForeground(new java.awt.Color(255, 255, 255));

        jLabel3.setBackground(new java.awt.Color(36, 16, 78));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Danh Sách Sản Phẩm Bán Chạy");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        listHotProduct.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        listHotProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        listHotProduct.setRowHeight(30);
        jScrollPane2.setViewportView(listHotProduct);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout DSsanphambanchayLayout = new javax.swing.GroupLayout(DSsanphambanchay.getContentPane());
        DSsanphambanchay.getContentPane().setLayout(DSsanphambanchayLayout);
        DSsanphambanchayLayout.setHorizontalGroup(
            DSsanphambanchayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        DSsanphambanchayLayout.setVerticalGroup(
            DSsanphambanchayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        chartReport.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        chartReport.setFocusCycleRoot(false);
        chartReport.setModal(true);
        chartReport.setSize(new java.awt.Dimension(1100, 800));

        MainContentChart.setBackground(new java.awt.Color(255, 255, 255));
        MainContentChart.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout chartReportLayout = new javax.swing.GroupLayout(chartReport.getContentPane());
        chartReport.getContentPane().setLayout(chartReportLayout);
        chartReportLayout.setHorizontalGroup(
            chartReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainContentChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        chartReportLayout.setVerticalGroup(
            chartReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainContentChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setBorder(null);
        setPreferredSize(new java.awt.Dimension(1100, 800));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        scrollPane.setBackground(new java.awt.Color(255, 255, 255));

        ReportTable.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ReportTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        ReportTable.setRowHeight(30);
        ReportTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        scrollPane.setViewportView(ReportTable);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1070, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 5, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 117, -1, 560));

        jToolBar1.setBackground(new java.awt.Color(255, 255, 255));
        jToolBar1.setBorder(javax.swing.BorderFactory.createTitledBorder("Chỉnh Sửa"));
        jToolBar1.setRollover(true);

        SPHuHongBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/doan/icon/sphuhong.png"))); // NOI18N
        SPHuHongBtn.setText("Sản phẩm hư hỏng");
        SPHuHongBtn.setFocusable(false);
        SPHuHongBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        SPHuHongBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        SPHuHongBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SPHuHongBtnActionPerformed(evt);
            }
        });
        jToolBar1.add(SPHuHongBtn);

        SPBanChayBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/doan/icon/spbanchay.png"))); // NOI18N
        SPBanChayBtn.setText("Sản phẩm bán chạy");
        SPBanChayBtn.setFocusable(false);
        SPBanChayBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        SPBanChayBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        SPBanChayBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SPBanChayBtnActionPerformed(evt);
            }
        });
        jToolBar1.add(SPBanChayBtn);
        jToolBar1.add(jSeparator1);

        chartBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/doan/icon/chart.png"))); // NOI18N
        chartBtn.setText("Biểu Đồ");
        chartBtn.setFocusable(false);
        chartBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        chartBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        chartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chartBtnActionPerformed(evt);
            }
        });
        jToolBar1.add(chartBtn);

        jPanel2.add(jToolBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jToolBar2.setBackground(new java.awt.Color(255, 255, 255));
        jToolBar2.setBorder(javax.swing.BorderFactory.createTitledBorder("Tìm Kiếm"));
        jToolBar2.setRollover(true);

        MonthCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6", "Tháng 7", "Tháng 8", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12" }));
        jToolBar2.add(MonthCombo);

        JSpinner.NumberEditor editor = new JSpinner.NumberEditor(YearSpinner, "#");
        NumberFormatter formatter = (NumberFormatter) editor.getTextField().getFormatter();
        formatter.setAllowsInvalid(false);
        formatter.setCommitsOnValidEdit(true);
        NumberFormat nf = (NumberFormat) formatter.getFormat();
        nf.setGroupingUsed(false);
        YearSpinner.setEditor(editor);
        jToolBar2.add(YearSpinner);

        sreachReportBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/doan/icon/search.png"))); // NOI18N
        sreachReportBtn.setText("Tìm Kiếm");
        sreachReportBtn.setFocusable(false);
        sreachReportBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sreachReportBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        sreachReportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sreachReportBtnActionPerformed(evt);
            }
        });
        jToolBar2.add(sreachReportBtn);

        jPanel2.add(jToolBar2, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 20, 370, 90));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Tổng Doanh Thu");

        DoanhThu.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        DoanhThu.setForeground(new java.awt.Color(0, 204, 51));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(640, 640, 640)
                        .addComponent(jLabel4)
                        .addGap(41, 41, 41)
                        .addComponent(DoanhThu, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(13, 13, 13))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DoanhThu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SPHuHongBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SPHuHongBtnActionPerformed
        // TODO add your handling code here:
        if (model2.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Không có sản phẩm hư hỏng nào trong tháng này");
            return;
        }

        DSsanphamhong.setLocationRelativeTo(null);
        DSsanphamhong.setVisible(true);

    }//GEN-LAST:event_SPHuHongBtnActionPerformed

    private void SPBanChayBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SPBanChayBtnActionPerformed
        // TODO add your handling code here:
        //right here
        // continue

        if (model3.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Chưa có sản phẩm đạt yêu cầu bán chạy");
            return;
        }
        DSsanphambanchay.setLocationRelativeTo(null);
        DSsanphambanchay.setVisible(true);
    }//GEN-LAST:event_SPBanChayBtnActionPerformed

    private void chartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chartBtnActionPerformed
        // TODO add your handling code here:
        MainContentChart.removeAll();
        MainContentChart.revalidate();
        MainContentChart.repaint();

        // Lấy dữ liệu để tạo biểu đồ
        List<SanPham> listDaBan = new ArrayList<>();
        for (int i = 0; i < model.getRowCount(); i++) {
            String maSP = String.valueOf(model.getValueAt(i, 0));
            String tenSP = String.valueOf(model.getValueAt(i, 1));
            int soLuong = Integer.parseInt(String.valueOf(model.getValueAt(i, 2)));
            SanPham sp = new SanPhamDAO().getInstance().selectById(maSP);
            sp.setSoLuong(soLuong);
            listDaBan.add(sp);
        }

        // Lấy dữ liệu từ model2 (sản phẩm hư hỏng)
        List<SanPham> listHuHong = new ArrayList<>();
        for (int i = 0; i < model2.getRowCount(); i++) {
            String maSP = String.valueOf(model2.getValueAt(i, 0));
            String tenSP = String.valueOf(model2.getValueAt(i, 1));
            int soLuong = Integer.parseInt(String.valueOf(model2.getValueAt(i, 2)));
            SanPham sp = new SanPhamDAO().getInstance().selectById(maSP);
            sp.setSoLuong(soLuong);
            listHuHong.add(sp);
        }

        // Tạo biểu đồ và thêm vào MainContentChart
        JPanel chartPanel = createdChart(listDaBan, listHuHong);
        MainContentChart.add(chartPanel, java.awt.BorderLayout.CENTER); // Thêm vào CENTER
        MainContentChart.revalidate();
        MainContentChart.repaint();

        // Hiển thị JDialog
        chartReport.setLocationRelativeTo(null);
        chartReport.setVisible(true);
    }//GEN-LAST:event_chartBtnActionPerformed

    private void sreachReportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sreachReportBtnActionPerformed
        // TODO add your handling code here:
        BaoCao bc = new Ctr_BaoCao().getInstance().searchReport(MonthCombo.getSelectedIndex() + 1, (int) YearSpinner.getValue());
        if (bc == null) {
            JOptionPane.showMessageDialog(null, "Không có báo cáo nào trong tháng này");
            model.setRowCount(0);
            model2.setRowCount(0);
            model3.setRowCount(0);
            return;
        }
        soldItem(new Ctr_BaoCao().getSanPhamDaBanInMonthYear(MonthCombo.getSelectedIndex() + 1, (int) YearSpinner.getValue()));
        damageItem(bc.getSanPhamHuHong());
        updateHotProduct();
        hotItem(bc.getSanPhamXuHuong());
        
        double x = 0;
        for (int i = 0; i < model.getRowCount(); i++) {
            x += Double.valueOf(String.valueOf(model.getValueAt(i, 3)));
        }
        DoanhThu.setText(String.valueOf(x - Double.parseDouble(TongThietHai.getText())));
    }//GEN-LAST:event_sreachReportBtnActionPerformed

    private void soldItem(List<SanPham> list) {
        model.setRowCount(0);
        list = mergeProductList(list);
        for (SanPham x : list) {
            model.addRow(new Object[]{
                x.getMaSP(),
                x.getTenSP(),
                x.getSoLuong(),
                x.getGiaNY() * x.getSoLuong()
            });
        }
    }

    private void damageItem(List<SanPham> list) {
        model2.setRowCount(0);
        list = mergeProductList(list);
        for (SanPham x : list) {
            model2.addRow(new Object[]{
                x.getMaSP(),
                x.getTenSP(),
                x.getSoLuong(),
                x.getGiaNY(),
                x.getSoLuong() * x.getGiaNY()
            });
        }
        calculateDamage();
    }

    private void hotItem(List<SanPham> list) {
        model3.setRowCount(0);
        list = mergeProductList(list);
        for (SanPham x : list) {
            model3.addRow(new Object[]{
                x.getMaSP(),
                x.getTenSP(),
                x.getSoLuong()
            });
        }
    }

    private void setTableData(List<BaoCao> bc) {
        for (BaoCao x : bc) {
            model.addRow(new Object[]{
                x.getMaBaoCao(),
                x.getNgayLap(),
                x.getTongDoanhThu(),
                x.getNVLap().getMaNV()
            });
        }
    }

    private void calculateDamage() {
        if (model2.getRowCount() == 0) {
            TongThietHai.setText("0");
            return;
        }

        double damage = 0;
        for (int i = 0; i < model2.getRowCount(); i++) {
            damage += (double) model2.getValueAt(i, 3);
        }
        TongThietHai.setText(String.valueOf(damage));
    }

    public void updateHotProduct() {
        for (int i = 0; i < model.getRowCount(); i++) {
            if (Integer.valueOf(String.valueOf(model.getValueAt(i, 2))) > 10) {
                new Ctr_BaoCao().addSanPhamHot(new Ctr_BaoCao().getReportInMonth().getMaBaoCao(), String.valueOf(model.getValueAt(i, 0)), Integer.valueOf(String.valueOf(model.getValueAt(i, 2))));
            }
        }
    }

    private List<SanPham> mergeProductList(List<SanPham> list) {
        Map<String, SanPham> mp = new HashMap<>();
        for (SanPham sp : list) {
            if (mp.containsKey(sp.getMaSP())) {
                SanPham existingProduct = mp.get(sp.getMaSP());
                existingProduct.setSoLuong(existingProduct.getSoLuong() + sp.getSoLuong());
            } else {
                mp.put(sp.getMaSP(), sp);
            }
        }
        return new ArrayList<>(mp.values());
    }

    public JPanel createdChart(List<SanPham> listDaBan, List<SanPham> listHuHong) {
        // Dataset
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        // Thêm dữ liệu đã bán
        for (SanPham sp : listDaBan) {
            dataset.addValue(sp.getSoLuong(), "Đã bán", sp.getTenSP());
        }

        // Thêm dữ liệu hư hỏng
        for (SanPham sp : listHuHong) {
            dataset.addValue(sp.getSoLuong(), "Hư hỏng", sp.getTenSP());
        }

        // Tạo biểu đồ
        JFreeChart chart = ChartFactory.createBarChart(
                "Báo cáo doang thu " + MonthCombo.getSelectedItem() + " năm " + YearSpinner.getValue(),
                "Sản phẩm",
                "Số lượng",
                dataset,
                PlotOrientation.HORIZONTAL,
                true, true, false
        );

        // Tuỳ chỉnh giao diện
        CategoryPlot plot = chart.getCategoryPlot();
        plot.setBackgroundPaint(Color.WHITE);
        plot.setRangeGridlinePaint(new Color(220, 220, 220));

        // Font đẹp
        Font fontAxis = new Font("Segoe UI", Font.PLAIN, 14);
        Font fontTitle = new Font("Segoe UI", Font.BOLD, 22);
        Font fontLegend = new Font("Segoe UI", Font.PLAIN, 14);

        chart.getTitle().setFont(fontTitle);
        chart.getLegend().setItemFont(fontLegend);

        plot.getDomainAxis().setTickLabelFont(fontAxis);
        plot.getDomainAxis().setLabelFont(fontAxis);
        plot.getRangeAxis().setTickLabelFont(fontAxis);
        plot.getRangeAxis().setLabelFont(fontAxis);

        // Renderer
        BarRenderer renderer = new BarRenderer();
        renderer.setSeriesPaint(0, new Color(102, 178, 255)); // Đã bán
        renderer.setSeriesPaint(1, new Color(255, 102, 102)); // Hư hỏng
        renderer.setDrawBarOutline(false);
        renderer.setItemMargin(0.1);

        // Tooltip
        renderer.setSeriesToolTipGenerator(0, new StandardCategoryToolTipGenerator());
        renderer.setSeriesToolTipGenerator(1, new StandardCategoryToolTipGenerator());

        plot.setRenderer(renderer);

        ChartPanel chartPanel = new ChartPanel(chart);
        chartPanel.setBackground(Color.WHITE);
        return chartPanel;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog DSsanphambanchay;
    private javax.swing.JDialog DSsanphamhong;
    private javax.swing.JLabel DoanhThu;
    private javax.swing.JPanel MainContentChart;
    private javax.swing.JComboBox<String> MonthCombo;
    private javax.swing.JTable ReportTable;
    private javax.swing.JButton SPBanChayBtn;
    private javax.swing.JButton SPHuHongBtn;
    private javax.swing.JTextField TongThietHai;
    private javax.swing.JSpinner YearSpinner;
    private javax.swing.JButton chartBtn;
    private javax.swing.JDialog chartReport;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JTable listDamagedProduct;
    private javax.swing.JTable listHotProduct;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JButton sreachReportBtn;
    // End of variables declaration//GEN-END:variables
}
